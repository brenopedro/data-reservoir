# Database configuration
spring.datasource.url=jdbc:mysql://${DB_HOST:localhost}/data_reservoir?createDatabaseIfNotExist=true&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=1234
#spring.jpa.generate-ddl=true
#spring.jpa.hibernate.ddl-auto=create
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL57Dialect

logging.level.org.springframework=debug

# Redis
spring.session.store-type=none

# Flyway package location
spring.flyway.locations=classpath:db/migration,classpath:db/testdata

# Response compression
server.compression.enabled=true

# Security
spring.security.oauth2.resourceserver.jwt.public-key-location=classpath:keys/datareservoir-pkey.pem

# Authorization Server
datareservoir-jwt-keystore.jks-location=classpath:keys/datareservoir.jks
datareservoir-jwt-keystore.password=123456
datareservoir-jwt-keystore.keypair-alias=datareservoir

datareservoir.resource.baseUsername=base-station
datareservoir.resource.basePassword=base123

datareservoir.resource.clientUsername=client-station
datareservoir.resource.clientPassword=client123

datareservoir.resource.adminUsername=admin-client
datareservoir.resource.adminPassword=admin123

datareservoir.client.web-service-username=brenoClient
datareservoir.client.web-service-password=root{123}

datareservoir.client.admin-username=brenoAdmin
datareservoir.client.admin-password=123

# Client
data-reservoir.security.user=breno
data-reservoir.security.password=$2a$04$ga/m5guarUABgAawe5fS0e5FpCql2lG7.d2Var3qnJm69fNTo6I4y

datareservoir.authorization.auth-username=brenoAdmin
datareservoir.authorization.auth-password=123

datareservoir.authorization.auth-client-username=admin-client
datareservoir.authorization.auth-client-password=admin123

datareservoir.url.authorization-url=http://localhost:8080/oauth/token
datareservoir.url.cube-data=http://localhost:8080/v1/cube-data
datareservoir.url.drone-data=http://${HOST:localhost:8080}/v1/drone-data
datareservoir.url.rocket-data=http://${HOST:localhost:8080}/v1/rocket-data